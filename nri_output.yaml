---
# Source: nri-bundle/charts/pixie-chart/templates/00_olm.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: olm
---
# Source: nri-bundle/charts/pixie-chart/templates/01_px_olm.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: px-operator
---
# Source: nri-bundle/charts/kube-state-metrics/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-5.12.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/version: "2.10.0"
  name: release-1-kube-state-metrics
  namespace: default
imagePullSecrets:
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/controlplane/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
  name: release-1-nrk8s-controlplane
  namespace: default
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
  name: release-1-newrelic-infrastructure
  namespace: default
---
# Source: nri-bundle/charts/nri-prometheus/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-1-nri-prometheus
  namespace: default
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-prometheus
    app.kubernetes.io/version: 2.21.4
    helm.sh/chart: nri-prometheus-2.1.18
---
# Source: nri-bundle/charts/pixie-chart/templates/00_olm.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: olm-operator-serviceaccount
  namespace: olm
---
# Source: nri-bundle/charts/pixie-chart/templates/deleter_role.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pl-deleter-service-account
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-1-newrelic-infrastructure-license
  namespace: default
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
data:
  licenseKey: ZXUwMXh4ZjQ1ZTUzNTM0OTcyMDcxYWEwN2IwNDAwZmFGRkZGTlJBTA==
---
# Source: nri-bundle/charts/nri-prometheus/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-1-nri-prometheus-license
  namespace: default
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-prometheus
    app.kubernetes.io/version: 2.21.4
    helm.sh/chart: nri-prometheus-2.1.18
data:
  licenseKey: ZXUwMXh4ZjQ1ZTUzNTM0OTcyMDcxYWEwN2IwNDAwZmFGRkZGTlJBTA==
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/controlplane/agent-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: default
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
  name: release-1-nrk8s-agent-controlplane
data:
  newrelic-infra.yml: |-
    # This is the configuration file for the infrastructure agent. See:
    # https://docs.newrelic.com/docs/infrastructure/install-infrastructure-agent/configuration/infrastructure-agent-configuration-settings/
    custom_attributes:
      clusterName: minikube
    http_server_enabled: true
    http_server_port: 8001
    is_forward_only: true
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/controlplane/scraper-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
  name: release-1-nrk8s-controlplane
  namespace: default
data:
  nri-kubernetes.yml: |-
    interval: 15s
    namespaceSelector: {}
    controlPlane:
      retries: 3
      timeout: 10s
      enabled: true
      etcd:
        autodiscover:
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:4001
          - url: http://localhost:2381
          matchNode: true
          namespace: kube-system
          selector: tier=control-plane,component=etcd
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:4001
          matchNode: true
          namespace: kube-system
          selector: k8s-app=etcd-manager-main
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:4001
          matchNode: true
          namespace: kube-system
          selector: k8s-app=etcd
        enabled: true
      scheduler:
        autodiscover:
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10259
          matchNode: true
          namespace: kube-system
          selector: tier=control-plane,component=kube-scheduler
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10259
          matchNode: true
          namespace: kube-system
          selector: k8s-app=kube-scheduler
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10259
          matchNode: true
          namespace: openshift-kube-scheduler
          selector: app=openshift-kube-scheduler,scheduler=true
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10259
          matchNode: true
          namespace: kube-system
          selector: app=openshift-kube-scheduler,scheduler=true
        enabled: true
      controllerManager:
        autodiscover:
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10257
          matchNode: true
          namespace: kube-system
          selector: tier=control-plane,component=kube-controller-manager
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10257
          matchNode: true
          namespace: kube-system
          selector: k8s-app=kube-controller-manager
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10257
          matchNode: true
          namespace: openshift-kube-controller-manager
          selector: app=kube-controller-manager,kube-controller-manager=true
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10257
          matchNode: true
          namespace: kube-system
          selector: app=kube-controller-manager,kube-controller-manager=true
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:10257
          matchNode: true
          namespace: kube-system
          selector: app=controller-manager,controller-manager=true
        enabled: true
      apiServer:
        autodiscover:
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:8443
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:6443
          - url: http://localhost:8080
          matchNode: true
          namespace: kube-system
          selector: tier=control-plane,component=kube-apiserver
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:8443
          - url: http://localhost:8080
          matchNode: true
          namespace: kube-system
          selector: k8s-app=kube-apiserver
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:8443
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:6443
          matchNode: true
          namespace: openshift-kube-apiserver
          selector: app=openshift-kube-apiserver,apiserver=true
        - endpoints:
          - auth:
              type: bearer
            insecureSkipVerify: true
            url: https://localhost:8443
          matchNode: true
          namespace: kube-system
          selector: app=openshift-kube-apiserver,apiserver=true
        enabled: true
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/ksm/agent-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: default
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
  name: release-1-nrk8s-agent-ksm
data:
  newrelic-infra.yml: |-
    # This is the configuration file for the infrastructure agent. See:
    # https://docs.newrelic.com/docs/infrastructure/install-infrastructure-agent/configuration/infrastructure-agent-configuration-settings/
    custom_attributes:
      clusterName: minikube
    http_server_enabled: true
    http_server_port: 8002
    is_forward_only: true
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/ksm/scraper-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
  name: release-1-nrk8s-ksm
  namespace: default
data:
  nri-kubernetes.yml: |-
    interval: 15s
    namespaceSelector: {}
    ksm:
      enabled: true
      retries: 3
      scheme: http
      selector: app.kubernetes.io/name=kube-state-metrics
      timeout: 10s
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/kubelet/agent-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: default
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
  name: release-1-nrk8s-agent-kubelet
data:
  newrelic-infra.yml: |-
    # This is the configuration file for the infrastructure agent. See:
    # https://docs.newrelic.com/docs/infrastructure/install-infrastructure-agent/configuration/infrastructure-agent-configuration-settings/
    custom_attributes:
      clusterName: minikube
    features:
      docker_enabled: false
    http_server_enabled: true
    http_server_port: 8003
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/kubelet/integrations-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: default
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
  name: release-1-nrk8s-integrations-cfg
data:
  # This ConfigMap holds config files for integrations. They should have the following format:
  #redis-config.yml: |
  #  # Run auto discovery to find pods with label "app=redis"
  #  discovery:
  #    command:
  #      # Run discovery for Kubernetes. Use the following optional arguments:
  #      # --namespaces: Comma separated list of namespaces to discover pods on
  #      # --tls: Use secure (TLS) connection
  #      # --port: Port used to connect to the kubelet. Default is 10255
  #      exec: /var/db/newrelic-infra/nri-discovery-kubernetes --port PORT --tls
  #      match:
  #        label.app: redis
  #  integrations:
  #    - name: nri-redis
  #      env:
  #        # using the discovered IP as the hostname address
  #        HOSTNAME: ${discovery.ip}
  #        PORT: 6379
  #        KEYS: '{"0":["<KEY_1>"],"1":["<KEY_2>"]}'
  #        REMOTE_MONITORING: true
  #      labels:
  #        env: production
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/kubelet/scraper-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
  name: release-1-nrk8s-kubelet
  namespace: default
data:
  nri-kubernetes.yml: |
    interval: 15s
    namespaceSelector: {}
    kubelet:
      enabled: true
      retries: 3
      scraperMaxReruns: 4
      timeout: 10s
---
# Source: nri-bundle/charts/nri-prometheus/templates/configmap.yaml
kind: ConfigMap
metadata:
  name: release-1-nri-prometheus
  namespace: default
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-prometheus
    app.kubernetes.io/version: 2.21.4
    helm.sh/chart: nri-prometheus-2.1.18
apiVersion: v1
data:
  config.yaml: |
    cluster_name: minikube
    audit: false
    insecure_skip_verify: false
    require_scrape_enabled_label_for_nodes: true
    scrape_enabled_label: prometheus.io/scrape
    scrape_endpoints: false
    scrape_services: true
    transformations: []
---
# Source: nri-bundle/charts/kube-state-metrics/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-5.12.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/version: "2.10.0"
  name: release-1-kube-state-metrics
rules:

- apiGroups: ["certificates.k8s.io"]
  resources:
  - certificatesigningrequests
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - cronjobs
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - daemonsets
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - deployments
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - endpoints
  verbs: ["list", "watch"]

- apiGroups: ["autoscaling"]
  resources:
  - horizontalpodautoscalers
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "networking.k8s.io"]
  resources:
  - ingresses
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - jobs
  verbs: ["list", "watch"]

- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - limitranges
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - mutatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["list", "watch"]

- apiGroups: ["networking.k8s.io"]
  resources:
  - networkpolicies
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumeclaims
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumes
  verbs: ["list", "watch"]

- apiGroups: ["policy"]
  resources:
    - poddisruptionbudgets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - pods
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - replicasets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - replicationcontrollers
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - resourcequotas
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - secrets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - services
  verbs: ["list", "watch"]

- apiGroups: ["apps"]
  resources:
  - statefulsets
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - storageclasses
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - validatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - volumeattachments
  verbs: ["list", "watch"]
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
  name: release-1-newrelic-infrastructure
rules:
  - apiGroups: [""]
    resources:
      - "nodes/metrics"
      - "nodes/stats"
      - "nodes/proxy"
    verbs: ["get", "list"]
  - apiGroups: [ "" ]
    resources:
      - "endpoints"
      - "services"
      - "nodes"
      - "namespaces"
      - "pods"
    verbs: [ "get", "list", "watch" ]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/controlplane/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
  name: release-1-nrk8s-controlplane
rules:
  - apiGroups: [""]
    resources:
      - "nodes/metrics"
      - "nodes/stats"
      - "nodes/proxy"
    verbs: ["get", "list"]
  - apiGroups: [ "" ]
    resources:
      - "pods"
      - "nodes"
    verbs: [ "get", "list", "watch" ]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get", "head"]
---
# Source: nri-bundle/charts/nri-prometheus/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-1-nri-prometheus
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-prometheus
    app.kubernetes.io/version: 2.21.4
    helm.sh/chart: nri-prometheus-2.1.18
rules:
- apiGroups: [""]
  resources:
    - "nodes"
    - "nodes/metrics"
    - "nodes/stats"
    - "nodes/proxy"
    - "pods"
    - "services"
    - "endpoints"
  verbs: ["get", "list", "watch"]
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: nri-bundle/charts/pixie-chart/templates/00_olm.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:controller:operator-lifecycle-manager
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
- nonResourceURLs: ["*"]
  verbs: ["*"]
---
# Source: nri-bundle/charts/pixie-chart/templates/00_olm.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aggregate-olm-edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
- apiGroups: ["operators.coreos.com"]
  resources: ["subscriptions"]
  verbs: ["create", "update", "patch", "delete"]
- apiGroups: ["operators.coreos.com"]
  resources: ["clusterserviceversions", "catalogsources", "installplans", "subscriptions"]
  verbs: ["delete"]
---
# Source: nri-bundle/charts/pixie-chart/templates/00_olm.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aggregate-olm-view
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
- apiGroups: ["operators.coreos.com"]
  resources: ["clusterserviceversions", "catalogsources", "installplans", "subscriptions", "operatorgroups"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["packages.operators.coreos.com"]
  resources: ["packagemanifests", "packagemanifests/icon"]
  verbs: ["get", "list", "watch"]
---
# Source: nri-bundle/charts/pixie-chart/templates/deleter_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pl-deleter-cluster-role
rules:
# Allow actions on Kubernetes objects
- apiGroups:
  - rbac.authorization.k8s.io
  - etcd.database.coreos.com
  - nats.io
  resources:
  - clusterroles
  - clusterrolebindings
  - persistentvolumes
  - etcdclusters
  - natsclusters
  verbs: ["*"]
---
# Source: nri-bundle/charts/kube-state-metrics/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-5.12.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/version: "2.10.0"
  name: release-1-kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-1-kube-state-metrics
subjects:
- kind: ServiceAccount
  name: release-1-kube-state-metrics
  namespace: default
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
  name: release-1-newrelic-infrastructure
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-1-newrelic-infrastructure
subjects:
- kind: ServiceAccount
  name: release-1-newrelic-infrastructure
  namespace: default
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/controlplane/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
  name: release-1-nrk8s-controlplane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-1-nrk8s-controlplane
subjects:
  - kind: ServiceAccount
    name: release-1-nrk8s-controlplane
    namespace: default
---
# Source: nri-bundle/charts/nri-prometheus/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-1-nri-prometheus
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-prometheus
    app.kubernetes.io/version: 2.21.4
    helm.sh/chart: nri-prometheus-2.1.18
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-1-nri-prometheus
subjects:
- kind: ServiceAccount
  name: release-1-nri-prometheus
  namespace: default
---
# Source: nri-bundle/charts/pixie-chart/templates/00_olm.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: olm-operator-cluster-binding-olm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:operator-lifecycle-manager
subjects:
- kind: ServiceAccount
  name: olm-operator-serviceaccount
  namespace: olm
---
# Source: nri-bundle/charts/pixie-chart/templates/deleter_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pl-deleter-cluster-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pl-deleter-role
subjects:
- kind: ServiceAccount
  name: pl-deleter-service-account
  namespace: "default"
---
# Source: nri-bundle/charts/pixie-chart/templates/deleter_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pl-deleter-role
rules:
- apiGroups:
  - ""
  - apps
  - rbac.authorization.k8s.io
  - extensions
  - batch
  - policy
  resources:
  - configmaps
  - secrets
  - pods
  - services
  - deployments
  - daemonsets
  - persistentvolumes
  - roles
  - rolebindings
  - serviceaccounts
  - statefulsets
  - cronjobs
  - jobs
  verbs: ["*"]
---
# Source: nri-bundle/charts/pixie-chart/templates/deleter_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pl-deleter-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pl-deleter-role
subjects:
- kind: ServiceAccount
  name: pl-deleter-service-account
  namespace: "default"
---
# Source: nri-bundle/charts/kube-state-metrics/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-1-kube-state-metrics
  namespace: default
  labels:    
    helm.sh/chart: kube-state-metrics-5.12.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/version: "2.10.0"
  annotations:
    prometheus.io/scrape: 'true'
spec:
  type: "ClusterIP"
  ports:
  - name: "http"
    protocol: TCP
    port: 8080
    targetPort: 8080
  
  selector:    
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: release-1
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-1-nri-metadata-injection
  namespace: default
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.29.0
    helm.sh/chart: nri-metadata-injection-4.21.0
spec:
  ports:
  - port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/name: nri-metadata-injection
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/controlplane/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: default
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
    mode: privileged
  name: release-1-nrk8s-controlplane
spec:
  updateStrategy: 
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-1
      app.kubernetes.io/name: newrelic-infrastructure
      app.kubernetes.io/component: controlplane
  template:
    metadata:
      annotations:
        checksum/nri-kubernetes: 574f8234b5741aef8d2030929e2c6f4c9fc4942b2164f26cbd3bb43f3f9b44d2
        checksum/agent-config: 97edefd06a58655a8661f614bcc78325c8758bab6d32dada6eaf0c6e06ea7294
        checksum/license-secret: aed023b1dbf09ab2c5f2df1024b92a43eb609e02304cab99b4f6c032e1ac4966
      labels:
        app.kubernetes.io/instance: release-1
        app.kubernetes.io/name: newrelic-infrastructure
        mode: privileged
        app.kubernetes.io/component: controlplane
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: release-1-nrk8s-controlplane
      containers:
        - name: controlplane
          image: "newrelic/nri-kubernetes:3.29.4"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 1000
          env:
            - name: "NRI_KUBERNETES_SINK_HTTP_PORT"
              value: "8001"
            - name: "NRI_KUBERNETES_CLUSTERNAME"
              value: minikube
            - name: "NRI_KUBERNETES_VERBOSE"
              value: "false"

            - name: "NRI_KUBERNETES_NODENAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            - name: "NRI_KUBERNETES_NODEIP"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "status.hostIP"
          volumeMounts:
            - name: nri-kubernetes-config
              mountPath: /etc/newrelic-infra/nri-kubernetes.yml
              subPath: nri-kubernetes.yml
          resources: 
            limits:
              memory: 300M
            requests:
              cpu: 100m
              memory: 150M
        - name: forwarder
          image: "newrelic/k8s-events-forwarder:1.55.2"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 1000
          ports:
            - containerPort: 8001
          env:
            - name: "NRIA_LICENSE_KEY"
              valueFrom:
                secretKeyRef:
                  name: release-1-newrelic-infrastructure-license
                  key: licenseKey

            - name: "NRIA_DNS_HOSTNAME_RESOLUTION"
              value: "false"

            - name: "K8S_NODE_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
          volumeMounts:
            - mountPath: /var/db/newrelic-infra/data
              name: forwarder-tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: forwarder-tmpfs-user-data
            - mountPath: /tmp
              name: forwarder-tmpfs-tmp
            - name: config
              mountPath: /etc/newrelic-infra.yml
              subPath: newrelic-infra.yml
          resources: 
            limits:
              memory: 300M
            requests:
              cpu: 100m
              memory: 150M
      volumes:
        - name: nri-kubernetes-config
          configMap:
            name: release-1-nrk8s-controlplane
            items:
              - key: nri-kubernetes.yml
                path: nri-kubernetes.yml
        - name: forwarder-tmpfs-data
          emptyDir: {}
        - name: forwarder-tmpfs-user-data
          emptyDir: {}
        - name: forwarder-tmpfs-tmp
          emptyDir: {}
        - name: config
          configMap:
            name: release-1-nrk8s-agent-controlplane
            items:
              - key: newrelic-infra.yml
                path: newrelic-infra.yml
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/controlplane
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/etcd
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/kubelet/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: default
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
    mode: privileged
  name: release-1-nrk8s-kubelet
spec:
  updateStrategy: 
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-1
      app.kubernetes.io/name: newrelic-infrastructure
      app.kubernetes.io/component: kubelet
  template:
    metadata:
      annotations:
        checksum/nri-kubernetes: 50cae2064bc842381dcb044ac875fdddb787c96ea9c47663cc6fcb59f6cd477c
        checksum/agent-config: cc840b936c4ec68b2e98dbbb638ea0c3f5af1c2b0f69e72447acbf0e9543dd0e
        checksum/license-secret: aed023b1dbf09ab2c5f2df1024b92a43eb609e02304cab99b4f6c032e1ac4966
        checksum/integrations_config: 8d515b78293dcd172f7fe09647af2c22ed16c73bf903a902c40631c724e499dd
      labels:
        app.kubernetes.io/instance: release-1
        app.kubernetes.io/name: newrelic-infrastructure
        mode: privileged
        app.kubernetes.io/component: kubelet
    spec:
      serviceAccountName: release-1-newrelic-infrastructure
      hostNetwork: false
      containers:
        - name: kubelet
          image: "newrelic/nri-kubernetes:3.29.4"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 1000
          env:
            - name: "NRI_KUBERNETES_SINK_HTTP_PORT"
              value: "8003"
            - name: "NRI_KUBERNETES_CLUSTERNAME"
              value: minikube
            - name: "NRI_KUBERNETES_VERBOSE"
              value: "false"

            - name: "NRI_KUBERNETES_NODENAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            # Required to connect to the kubelet
            - name: "NRI_KUBERNETES_NODEIP"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "status.hostIP"
          volumeMounts:
            - name: nri-kubernetes-config
              mountPath: /etc/newrelic-infra/nri-kubernetes.yml
              subPath: nri-kubernetes.yml
          resources: 
            limits:
              memory: 300M
            requests:
              cpu: 100m
              memory: 150M
        - name: agent
          image: "newrelic/infrastructure-bundle:3.2.49"
          args: [ "newrelic-infra" ]
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: true
            runAsGroup: 0
            runAsUser: 0
          ports:
            - containerPort: 8003
          env:
            - name: NRIA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: release-1-newrelic-infrastructure-license
                  key: licenseKey

            - name: "NRIA_OVERRIDE_HOSTNAME_SHORT"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"

            - name: "NRIA_OVERRIDE_HOSTNAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"

            - name: "NRI_KUBERNETES_NODE_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            - name: "CLUSTER_NAME"
              value: minikube
            - name: "NRIA_PASSTHROUGH_ENVIRONMENT"
              value: "CLUSTER_NAME"
            - name: "NRIA_HOST"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "status.hostIP"
          volumeMounts:
            - name: config
              mountPath: /etc/newrelic-infra.yml
              subPath: newrelic-infra.yml
            - name: nri-integrations-cfg-volume
              mountPath: /etc/newrelic-infra/integrations.d/
            - name: dev
              mountPath: /dev
            - name: host-containerd-socket
              mountPath: /run/containerd/containerd.sock
            - name: host-docker-socket
              mountPath: /var/run/docker.sock
            - name: log
              mountPath: /var/log
            - name: host-volume
              mountPath: /host
              mountPropagation: HostToContainer
              readOnly: true
            - mountPath: /var/db/newrelic-infra/data
              name: agent-tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: agent-tmpfs-user-data
            - mountPath: /tmp
              name: agent-tmpfs-tmp
          resources: 
            limits:
              memory: 300M
            requests:
              cpu: 100m
              memory: 150M
      volumes:
        - name: dev
          hostPath:
            path: /dev
        - name: host-containerd-socket
          hostPath:
            path: /run/containerd/containerd.sock
        - name: host-docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: log
          hostPath:
            path: /var/log
        - name: host-volume
          hostPath:
            path: /
        - name: agent-tmpfs-data
          emptyDir: {}
        - name: agent-tmpfs-user-data
          emptyDir: {}
        - name: agent-tmpfs-tmp
          emptyDir: {}
        - name: nri-kubernetes-config
          configMap:
            name: release-1-nrk8s-kubelet
            items:
              - key: nri-kubernetes.yml
                path: nri-kubernetes.yml
        - name: config
          configMap:
            name: release-1-nrk8s-agent-kubelet
            items:
              - key: newrelic-infra.yml
                path: newrelic-infra.yml
        - name: nri-integrations-cfg-volume
          configMap:
            name: release-1-nrk8s-integrations-cfg
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: nri-bundle/charts/kube-state-metrics/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-1-kube-state-metrics
  namespace: default
  labels:    
    helm.sh/chart: kube-state-metrics-5.12.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/version: "2.10.0"
spec:
  selector:
    matchLabels:      
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/instance: release-1
  replicas: 1
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:        
        helm.sh/chart: kube-state-metrics-5.12.1
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: metrics
        app.kubernetes.io/part-of: kube-state-metrics
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/instance: release-1
        app.kubernetes.io/version: "2.10.0"
    spec:
      hostNetwork: false
      serviceAccountName: release-1-kube-state-metrics
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: kube-state-metrics
        args:
        - --port=8080
        - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
        imagePullPolicy: IfNotPresent
        image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
        ports:
        - containerPort: 8080
          name: "http"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/ksm/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.29.4
    helm.sh/chart: newrelic-infrastructure-3.34.4
    mode: privileged
  name: release-1-nrk8s-ksm
spec:
  strategy: 
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-1
      app.kubernetes.io/name: newrelic-infrastructure
      app.kubernetes.io/component: ksm
  template:
    metadata:
      annotations:
        checksum/nri-kubernetes: 62e91bcfc04ca478ce3167badc23416d4e524c41785c5ccb8c750c5c4f06b8c4
        checksum/agent-config: 75d0da9306b9edbbe1f2c1eea8888bcade1acae8166a14818d9cb1d787a4e6fa
        checksum/license-secret: aed023b1dbf09ab2c5f2df1024b92a43eb609e02304cab99b4f6c032e1ac4966
      labels:
        app.kubernetes.io/instance: release-1
        app.kubernetes.io/name: newrelic-infrastructure
        mode: privileged
        app.kubernetes.io/component: ksm
    spec:
      serviceAccountName: release-1-newrelic-infrastructure
      hostNetwork: false
      containers:
        - name: ksm
          image: "newrelic/nri-kubernetes:3.29.4"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 1000
          env:
            - name: "NRI_KUBERNETES_SINK_HTTP_PORT"
              value: "8002"
            - name: "NRI_KUBERNETES_CLUSTERNAME"
              value: minikube
            - name: "NRI_KUBERNETES_VERBOSE"
              value: "false"

            - name: "NRI_KUBERNETES_NODENAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
          volumeMounts:
            - name: nri-kubernetes-config
              mountPath: /etc/newrelic-infra/nri-kubernetes.yml
              subPath: nri-kubernetes.yml
          resources: 
            limits:
              memory: 850M
            requests:
              cpu: 100m
              memory: 150M
        - name: forwarder
          image: "newrelic/k8s-events-forwarder:1.55.2"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 1000
          ports:
            - containerPort: 8002
          env:
            - name: NRIA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: release-1-newrelic-infrastructure-license
                  key: licenseKey

            - name: "NRIA_DNS_HOSTNAME_RESOLUTION"
              value: "false"

            - name: "K8S_NODE_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
          volumeMounts:
            - mountPath: /var/db/newrelic-infra/data
              name: forwarder-tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: forwarder-tmpfs-user-data
            - mountPath: /tmp
              name: forwarder-tmpfs-tmp
            - name: config
              mountPath: /etc/newrelic-infra.yml
              subPath: newrelic-infra.yml
          resources: 
            limits:
              memory: 850M
            requests:
              cpu: 100m
              memory: 150M
      volumes:
        - name: nri-kubernetes-config
          configMap:
            name: release-1-nrk8s-ksm
            items:
              - key: nri-kubernetes.yml
                path: nri-kubernetes.yml
        - name: forwarder-tmpfs-data
          emptyDir: {}
        - name: forwarder-tmpfs-user-data
          emptyDir: {}
        - name: forwarder-tmpfs-tmp
          emptyDir: {}
        - name: config
          configMap:
            name: release-1-nrk8s-agent-ksm
            items:
              - key: newrelic-infra.yml
                path: newrelic-infra.yml
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: kube-state-metrics
              topologyKey: kubernetes.io/hostname
            weight: 100
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-1-nri-metadata-injection
  namespace: default
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.29.0
    helm.sh/chart: nri-metadata-injection-4.21.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nri-metadata-injection
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: release-1
        app.kubernetes.io/name: nri-metadata-injection
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
        runAsGroup: 1001
      hostNetwork: false
      containers:
      - name: nri-metadata-injection
        image: "newrelic/k8s-metadata-injection:1.29.0"
        imagePullPolicy: IfNotPresent
        env:
        - name: clusterName
          value: minikube
        ports:
          - containerPort: 8443
            protocol: TCP
        volumeMounts:
        - name: tls-key-cert-pair
          mountPath: /etc/tls-key-cert-pair
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 1
        resources:
          
          limits:
            memory: 80M
          requests:
            cpu: 100m
            memory: 30M
      volumes:
      - name: tls-key-cert-pair
        secret:
          secretName: release-1-nri-metadata-injection-admission
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: nri-bundle/charts/nri-prometheus/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-1-nri-prometheus
  namespace: default
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-prometheus
    app.kubernetes.io/version: 2.21.4
    helm.sh/chart: nri-prometheus-2.1.18
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nri-prometheus
  template:
    metadata:
      annotations:
        checksum/config: 48af98ca6040008889d38733cdb0cf748773a52ccfbbfadec44242bd4143a91f
      labels:
        app.kubernetes.io/instance: release-1
        app.kubernetes.io/name: nri-prometheus
    spec:
      serviceAccountName: release-1-nri-prometheus
      containers:
      - name: nri-prometheus
        image: "newrelic/nri-prometheus:2.21.4"
        imagePullPolicy: 
        args:
          - "--configfile=/etc/nri-prometheus/config.yaml"
        ports:
          - containerPort: 8080
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nri-prometheus/
        env:
          - name: "LICENSE_KEY"
            valueFrom:
                secretKeyRef:
                  name: release-1-nri-prometheus-license
                  key: licenseKey
          - name: "BEARER_TOKEN_FILE"
            value: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          - name: "CA_FILE"
            value: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
        resources:
          {}
      volumes:
        - name: config-volume
          configMap:
            name: release-1-nri-prometheus
---
# Source: nri-bundle/charts/pixie-chart/templates/00_olm.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: olm-operator
  namespace: olm
  labels:
    app: olm-operator
spec:
  strategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: olm-operator
  template:
    metadata:
      labels:
        app: olm-operator
    spec:
      serviceAccountName: olm-operator-serviceaccount
      containers:
        - name: olm-operator
          command:
          - /bin/olm
          args:
          - --namespace
          - $(OPERATOR_NAMESPACE)
          - --writeStatusName
          - ""
          image: quay.io/operator-framework/olm@sha256:1b6002156f568d722c29138575733591037c24b4bfabc67946f268ce4752c3e6
          ports:
            - containerPort: 8080
            - containerPort: 8081
              name: metrics
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
          terminationMessagePolicy: FallbackToLogsOnError
          env:
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: OPERATOR_NAME
            value: olm-operator
          resources:
            requests:
              cpu: 10m
              memory: 160Mi
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "amd64"
        effect: "NoSchedule"
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "amd64"
        effect: "NoExecute"
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "arm64"
        effect: "NoSchedule"
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "arm64"
        effect: "NoExecute"
---
# Source: nri-bundle/charts/pixie-chart/templates/00_olm.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog-operator
  namespace: olm
  labels:
    app: catalog-operator
spec:
  strategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: catalog-operator
  template:
    metadata:
      labels:
        app: catalog-operator
    spec:
      serviceAccountName: olm-operator-serviceaccount
      containers:
        - name: catalog-operator
          command:
          - /bin/catalog
          args:
          - '--namespace'
          - olm
          - --configmapServerImage=quay.io/operator-framework/configmap-operator-registry:latest
          - --util-image
          -  quay.io/operator-framework/olm@sha256:1b6002156f568d722c29138575733591037c24b4bfabc67946f268ce4752c3e6
          - --opmImage
          -  quay.io/operator-framework/opm@sha256:d999588bd4e9509ec9e75e49adfb6582d256e9421e454c7fb5e9fe57e7b1aada
          image: quay.io/operator-framework/olm@sha256:1b6002156f568d722c29138575733591037c24b4bfabc67946f268ce4752c3e6
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
            - containerPort: 8081
              name: metrics
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
          terminationMessagePolicy: FallbackToLogsOnError
          env:
          resources:
            requests:
              cpu: 10m
              memory: 80Mi
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "amd64"
        effect: "NoSchedule"
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "amd64"
        effect: "NoExecute"
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "arm64"
        effect: "NoSchedule"
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "arm64"
        effect: "NoExecute"
---
# Source: nri-bundle/charts/pixie-chart/templates/02_catalog.yaml
apiVersion: operators.coreos.com/v1alpha1
kind: CatalogSource
metadata:
  name: pixie-operator-index
  namespace: px-operator
spec:
  sourceType: grpc
  image: gcr.io/pixie-oss/pixie-prod/operator/bundle_index:0.0.1
  displayName: Pixie Vizier Operator
  publisher: px.dev
  updateStrategy:
    registryPoll:
      interval: 10m
  grpcPodConfig:
    tolerations:
    - key: "kubernetes.io/arch"
      operator: "Equal"
      value: "amd64"
      effect: "NoSchedule"
    - key: "kubernetes.io/arch"
      operator: "Equal"
      value: "amd64"
      effect: "NoExecute"
    - key: "kubernetes.io/arch"
      operator: "Equal"
      value: "arm64"
      effect: "NoSchedule"
    - key: "kubernetes.io/arch"
      operator: "Equal"
      value: "arm64"
      effect: "NoExecute"
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/mutatingWebhookConfiguration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: release-1-nri-metadata-injection
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.29.0
    helm.sh/chart: nri-metadata-injection-4.21.0
webhooks:
- name: metadata-injection.newrelic.com
  clientConfig:
    service:
      name: release-1-nri-metadata-injection
      namespace: default
      path: "/mutate"
    caBundle: ""
  rules:
  - operations: ["CREATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
  failurePolicy: Ignore
  timeoutSeconds: 28
  sideEffects: None
  admissionReviewVersions: ["v1", "v1beta1"]
---
# Source: nri-bundle/charts/pixie-chart/templates/00_olm.yaml
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: olm-operators
  namespace: olm
spec:
  targetNamespaces:
    - olm
---
# Source: nri-bundle/charts/pixie-chart/templates/01_px_olm.yaml
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: global-operators
  namespace: px-operator
---
# Source: nri-bundle/charts/pixie-chart/templates/03_subscription.yaml
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: pixie-operator-subscription
  namespace: px-operator
spec:
  channel: stable
  name: pixie-operator
  source: pixie-operator-index
  sourceNamespace: px-operator
  installPlanApproval: Automatic
---
# Source: nri-bundle/charts/pixie-chart/templates/04_vizier.yaml
apiVersion: px.dev/v1alpha1
kind: Vizier
metadata:
  name: pixie
  namespace: default
spec:
  cloudAddr: withpixie.ai:443
  disableAutoUpdate: false
  useEtcdOperator: false
  clusterName: minikube
  dataAccess: Full
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-1-nri-metadata-injection-admission
  namespace: default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: nri-metadata-injection-admission
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.29.0
    helm.sh/chart: nri-metadata-injection-4.21.0
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-1-nri-metadata-injection-admission
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: nri-metadata-injection-admission
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.29.0
    helm.sh/chart: nri-metadata-injection-4.21.0
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - get
      - update
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-1-nri-metadata-injection-admission
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.29.0
    helm.sh/chart: nri-metadata-injection-4.21.0
    app: nri-metadata-injection-admission
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-1-nri-metadata-injection-admission
subjects:
  - kind: ServiceAccount
    name: release-1-nri-metadata-injection-admission
    namespace: default
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-1-nri-metadata-injection-admission
  namespace: default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: nri-metadata-injection-admission
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.29.0
    helm.sh/chart: nri-metadata-injection-4.21.0
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - create
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-1-nri-metadata-injection-admission
  namespace: default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: nri-metadata-injection-admission
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.29.0
    helm.sh/chart: nri-metadata-injection-4.21.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-1-nri-metadata-injection-admission
subjects:
  - kind: ServiceAccount
    name: release-1-nri-metadata-injection-admission
    namespace: default
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/job-createSecret.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-1-nri-metadata-injection-admission-create
  namespace: default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: nri-metadata-injection-admission-create
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.29.0
    helm.sh/chart: nri-metadata-injection-4.21.0
spec:
  template:
    metadata:
      name: release-1-nri-metadata-injection-admission-create
      labels:
        app: nri-metadata-injection-admission-create
        app.kubernetes.io/instance: release-1
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nri-metadata-injection
        app.kubernetes.io/version: 1.29.0
        helm.sh/chart: nri-metadata-injection-4.21.0
    spec:
      containers:
        - name: create
          image: "registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.3.0"
          imagePullPolicy: IfNotPresent
          args:
            - create
            - --host=release-1-nri-metadata-injection,release-1-nri-metadata-injection.default.svc
            - --namespace=default
            - --secret-name=release-1-nri-metadata-injection-admission
            - --cert-name=tls.crt
            - --key-name=tls.key
      restartPolicy: OnFailure
      serviceAccountName: release-1-nri-metadata-injection-admission
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/job-patchWebhook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-1-nri-metadata-injection-admission-patch
  namespace: default
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: nri-metadata-injection-admission-patch
    app.kubernetes.io/instance: release-1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.29.0
    helm.sh/chart: nri-metadata-injection-4.21.0
spec:
  template:
    metadata:
      name: release-1-nri-metadata-injection-admission-patch
      labels:
        app: nri-metadata-injection-admission-patch
        app.kubernetes.io/instance: release-1
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nri-metadata-injection
        app.kubernetes.io/version: 1.29.0
        helm.sh/chart: nri-metadata-injection-4.21.0
    spec:
      containers:
        - name: patch
          image: "registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.3.0"
          imagePullPolicy: IfNotPresent
          args:
            - patch
            - --webhook-name=release-1-nri-metadata-injection
            - --namespace=default
            - --secret-name=release-1-nri-metadata-injection-admission
            - --patch-failure-policy=Ignore
            - --patch-validating=false
      restartPolicy: OnFailure
      serviceAccountName: release-1-nri-metadata-injection-admission
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: nri-bundle/charts/pixie-chart/templates/deleter.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded
  name: vizier-deleter
  namespace: 'default'
spec:
  template:
    metadata:
      name: vizier-deleter
    spec:
      containers:
      - env:
        - name: PL_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PL_VIZIER_NAME
          value: 'pixie'
        image: gcr.io/pixie-oss/pixie-prod/operator-vizier_deleter:0.1.6
        name: delete-job
      restartPolicy: Never
      serviceAccountName: pl-deleter-service-account
